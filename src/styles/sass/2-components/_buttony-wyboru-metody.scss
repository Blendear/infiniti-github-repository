@use "../../../styles/sass/6-abstracts/mixins";
@use "../../../styles/sass/6-abstracts/colors";
@use "../../../styles/sass/6-abstracts/variables";
@use "../../../styles/sass/1-base/typography";

.wybor-metody {
  &__container {
    display: grid;
    grid-auto-flow: row;
    justify-items: center;
    // row-gap: variables.$title-content-row-gap;
  }
  &__buttony {
    display: grid;
    grid-auto-flow: column;
    column-gap: variables.$content-content-gap;

    &__btn {
      padding: variables.$content-content-gap 1rem;
      width: min(17rem, 21.5vw);
      aspect-ratio: 1/1;

      @include mixins.gradient-cross-browser(
        "border",
        variables.$gradient-direction-secondary,
        colors.$etrener-gradient-secondary-A,
        colors.$etrener-gradient-secondary-B
      );
      background-color: colors.$primary;
      border-radius: variables.$border-radius-sm;
      border-width: variables.$border-width-sm;
      font-weight: bold;
      display: grid;
      overflow: hidden;
      & h3 {
        font-size: typography.$font-size-sm;
        @include mixins.gradient-cross-browser(
          "text",
          variables.$gradient-direction-secondary,
          colors.$etrener-gradient-secondary-A,
          colors.$etrener-gradient-secondary-B
        );
      }
      & div {
        display: grid;
        align-items: center;
        justify-items: center;
      }
      & a {
        height: 100%;
        display: grid;
        grid-auto-flow: row;
        align-items: center;
        justify-items: center;
        row-gap: variables.$content-content-gap * 0.5; //protip1 / hook1 - legitny sposób zapobiegania pisanai zbednych, kolejnych variables? Po prostu mnożyć już istniejące, lekko tylko inne?
        grid-template-rows: 1fr 1fr;
      }

      & svg {
        color: colors.$etrener-gradient-secondary-A;
      }

      &--active {
        //trap1 - lepiej zawsze rob osobny class tne pod "disabled", zeby nie bawoic sie w usuwanie class defualtowych, a tylko bawic sie w dodawanie klas
        border-style: none;
        border-color: none;
        @include mixins.gradient-cross-browser(
          "bg",
          variables.$gradient-direction-secondary,
          colors.$etrener-gradient-secondary-A,
          colors.$etrener-gradient-secondary-B
        );
        //hook2 - zarówno te buttony, jak i buttony wylogownia, mają te same dwa warianty. warto by top przerobic w osobny mixin uniwersalny imo
        & h3,
        svg {
          color: colors.$primary;
          -webkit-text-fill-color: colors.$primary;
        }
      }
      &__icon {
        &--single {
          font-size: min(4.75rem, 7vw);
        }
        &--tripple {
          font-size: min(3rem, 3.5vw);
          width: min-content;
          display: grid;
          grid-auto-flow: column;
        }
      }
    }
  }
}
