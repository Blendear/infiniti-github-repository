//hook1 - template pisowni properties - \/ - najpierw rozmiary ogolne containera - pozniej jego layout wewnetrzyn etc.
// + znacnziki lin9ijne, np. ~~~, DLUGIE, zeby latwo znalezc pozycjonujace i rozmiarujace properties

// ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
// [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
// _________________________________________________________________________

//protip1 - justify/ align EVERYTHING - WYMUŚ rozmiar, WYMUŚ grid, WYMUŚ dedykowaną komendę gridową "...-ITEMS"
// display: grid;
// justify-items: center;
// align-items: center;
// width: 100%; // SZCZEGÓLNIE, gdy to child element a'la <a>, który próbuje zajac jak najmniej miejsce, WIEC NIE DA SIE bez wymusenia rozmiaru - miec miejsce na upozycjonownaie cos w srokdu niego
// height: 100%;

$rozmiar-rowa: minmax(0rem, max-content);

@mixin my-media-query($maxOrMinWidthBreakpoint, $breakpointAtHowManyEm) {
  // mobile FIRST   &   media queries NOT FOR URZĄDZENIA, tylko for breakpoints, czyli momenty rozciagniecia ekranu, które psują ci visual

  // @content === pozwala nam włożyć jakiklwiek kod do tego mxiia, gdy go stworzymy

  @if $maxOrMinWidthBreakpoint == "min" {
    @media (min-width: $breakpointAtHowManyEm) {
      @content;
    }
  }

  @if $maxOrMinWidthBreakpoint == "max" {
    @media (max-width: $breakpointAtHowManyEm) {
      @content;
    }
  }
}

.navbar-gorny {
  // &__grid-wysrodkowujacy-navbar {
  //   display: grid;

  //   grid-template-columns:
  //     [c-1] 1fr
  //     [c-2] max-content
  //     [c-3] 1fr
  //     [c-4];

  //   position: relative;
  // }
  &__caly-container {
    // ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

    width: max(31rem, 50vw);
    aspect-ratio: 8/1;

    position: fixed;
    z-index: 100;

    @include my-media-query("min", 35em) {
      width: 55vw;
    }
    // [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]

    display: grid;

    grid-template-rows:
      [r-1] $rozmiar-rowa
      [r-2];

    grid-template-columns:
      [c-1] 1fr
      [c-2] 2fr
      [c-3] 0.6fr
      [c-4] 1fr
      [c-5] 2fr
      [c-6] 0.6fr
      [c-7] 1fr
      [c-8];

    // _________________________________________________________________________

    //protip1 - repsonsive - rozmiary === min or max ZAMIAST media query
    //hook1 - FIXED zamiast sticky powinienem zawsze? when to sue which?

    background-color: white;
    box-shadow: 0 0 3vw 0.5vw #0000005b;

    @mixin menu-elements {
      // ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
      // [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
      // _________________________________________________________________________
      align-self: center;
      justify-self: center;
      // background-color: white;
      border: none;

      // margin: 2vw 0.5vw 2vw 0.5vw;
    }
    @mixin wyglad-svg {
      // ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~

      width: 100%;
      height: 100%;

      // [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]

      display: grid;

      justify-items: center;
      align-items: center;

      // _________________________________________________________________________

      & svg {
        // margin-left: 1rem;
        justify-self: center;
      }
      //trap1 - svg === FONT SIZE, nie widthem rozmiar określasz   &   rozmiar koniecznie classą zrob, nie inline styleami. bo szukasz pozniej 2 godiznydlaczego classa jest nadpisywana
      font-size: 7vw;

      // @include my-media-query("min", 35em) {
      //   font-size: 2vw;
      // }
    }
    @mixin wyglad-tekstu {
      font-size: min(3vw, 1rem);
      // align-self: center;
      @include my-media-query("min", 35em) {
        font-size: 2vw;
      }

      font-weight: bold;
      color: #3b3b3b;

      // @include my-media-query("min", 30em) {
      //   font-size: max(3vw, 1rem);
      // }

      &:active {
        color: #6c6992;
        // transform: scale(1.1);
      }

      //   text-align: center;
    }
    &__btn-zaloguj {
      // NIEUŻYTY /\

      //hook1 - tarp1 -  markuj nieuzyte classy, zeby nie ylo "dlaczego ta classa nie dziala" - czesto uzywam to tylko jako pisowniowe pogrupownaie podklas

      // @include menu-elements();

      &--svg {
        @include wyglad-svg();
        @include menu-elements();

        grid-row: r-1 / r-2;
        grid-column: c-1 / c-2;

        justify-self: start;
        // margin: 0.8vw 0 0 1vw;
        // overflow: visible;
      }
      &--tekst {
        grid-row: r-1 / r-2;
        grid-column: c-2 / c-3;
        @include wyglad-tekstu();
        @include menu-elements();
      }
    }
    &__btn-zapisz {
      &--svg {
        @include wyglad-svg();
        @include menu-elements();
        grid-row: r-1 / r-2;
        grid-column: c-4 / c-5;

        color: #303030;
      }
      &--tekst {
        grid-row: r-1 / r-2;
        grid-column: c-5 / c-6;

        @include wyglad-tekstu();
        @include menu-elements();
      }
    }
    &__btn-menu {
      &--svg {
        @include wyglad-svg();
        @include menu-elements();
        grid-row: r-1 / r-2;
        grid-column: c-7 / c-8;
      }
    }

    @mixin linia {
      background-color: #3b3b3b;
      width: 0.15rem;
      aspect-ratio: 1/18;
    }
    &__linia-dzielaca {
      &--1 {
        grid-row: r-1 / r-2;
        grid-column: c-3 / c-4;
        @include menu-elements();
        @include linia();
      }
      &--2 {
        grid-row: r-1 / r-2;
        grid-column: c-6 / c-7;
        @include menu-elements();
        @include linia();
      }
    }
  }
}
