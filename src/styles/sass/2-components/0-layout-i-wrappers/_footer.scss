.footer {
  &__caly-container {
    display: grid;
    grid-template-rows: 1fr;

    margin: 0 auto 0 auto;
    padding: 3rem 0 0 0;
    row-gap: 3rem;

    // background-color: black;
    background: #5a87ff;
    background: -moz-linear-gradient(0deg, #5a87ff 0%, #95d7ff 100%);
    background: -webkit-linear-gradient(0deg, #5a87ff 0%, #95d7ff 100%);
    background: linear-gradient(0deg, #cb8dff 0%, #809cff 100%);

    @media (orientation: landscape) {
      grid-auto-flow: column;
      // grid-template-columns: repeat(auto-fit, 30vw);

      grid-template-rows:
        [r-1] 1fr
        [r-2] minmax(0, max-content)
        [r-3] minmax(0, max-content)
        [r-4];
      grid-template-columns:
        [c-1] 1fr
        [c-2] 1fr
        [c-3] 1fr
        [c-4];
      row-gap: 2vw;
    }
  }
  @mixin tytul-kazdy {
    background-color: grey;
    display: grid;

    grid-template-columns:
      [c-1] 1fr
      [c-2] 5fr
      [c-3];

    //+reponsivenes - protip1 protip0 !!!
    //
    // EMPTY ROWS / COLUMNS zrob, są pewniejsz,e niz przesuwalne inny content marginy etc.
    // &&
    // NIE ROB AUTOFIT, lepiej zrobic bvreakpointy media queries, gdy design sie jebie
    // &&
    // aspect ratio height
    // &&
    // width i inne properties ograniczone poprzez... \/
    //
    //  - grid konkretny?
    //          -minmax() - trap1 TYLKO W GRID ROW / COLUMN działa. W innych miejsach działa
    //                      tylko min albo max, osobne properties \/
    //  - pojedynczy element (np. width / height / font size)?
    //          - descendant selector (np. childy będące "svg" tylko wycentruj, rezta justify start
    //          - min   or    max
    //                        ) Jak wybrać? - Min === schowajmy jego uglyness, ktory pojawia sie, gdy jest wiekszy niz ...
    //                                      - Max === eksponujmy jego valuekieyd tylko znajdzie sie miejsce
    //                        ) p. max === wybiera maksymalna z wartości. Np. "width:max(25vw, 20rem)"
    //                        w zmniejszonym oknie weźmie 20rem, ale gdy zaczniesz rozciagac
    //                        do prawei calego wekrnau, zauważysz ruch, BO 25VW BEDZIE WTEDY
    //                        WIĘKSZE niż 20rem. I.....Responsivnees lets go c:

    width: max(25vw, 25rem);
    aspect-ratio: 5/1;

    justify-self: center;

    align-items: center;
    justify-items: start;
    font-size: 1.6rem;
    font-weight: bold;
    color: white;
    background: #8c51d7;
    background: -moz-linear-gradient(0deg, #8c51d7 0%, #6283ff 100%);
    background: -webkit-linear-gradient(0deg, #8c51d7 0%, #6283ff 100%);
    background: linear-gradient(0deg, #965ae4 0%, #5b7eff 100%);
    // box-shadow: 0px 0px 0.2rem 0.2rem #53249078;
    @media (orientation: landscape) {
      width: 80%;
      aspect-ratio: 7/1;
      font-size: 1.3vw;
    }
    & svg {
      justify-self: center;
      font-size: 2rem;
      align-self: center;
    }
  }
  @mixin lista-rzeczy-grid-container {
    display: grid;
    grid-auto-rows: 5rem;
    // width: 80%;
    // align-items: end;
  }
  @mixin karta-kazda {
    display: grid;
    grid-template-columns:
      [c-1] 1fr
      [c-2] 5fr
      [c-3];
    // grid-auto-flow: column;
    // grid-auto-columns: minmax(1rem, 10rem);
    // column-gap: 1rem;

    align-self: end;
    // justify-self: start;
    font-size: 1.6rem;
    font-weight: normal;
    text-shadow: 0rem 0.2rem #5e286278;
    color: white;
    width: 80%;
    justify-self: center;
    @media (orientation: landscape) {
      width: 60%;
      font-size: 1.3vw;
    }
    & a {
      color: rgb(71, 71, 71);
    }
    & a:link,
    :visited,
    :active,
    :hover {
      text-decoration: none;
      color: rgb(255, 255, 255);
    }
    & svg {
      justify-self: center;
      font-size: 1.5rem;
      align-self: center;
    }
  }
  &__honorowane-karty {
    @media (orientation: landscape) {
      grid-row: r-1 / r-2;
      grid-column: c-1 / c-2;
    }
    @include lista-rzeczy-grid-container();

    &--tytul {
      @include tytul-kazdy();
    }
    &--karta {
      @include karta-kazda();
    }
  }
  //hook1 - PRZED SRTYLIZOWANIEM, włóz ORYGINALNE DANE. Inaczje bp. pozniej wkleisz
  // link component, i hierarchia divow idzie sie jebać
  &__dokumenty {
    @media (orientation: landscape) {
      grid-row: r-1 / r-2;
      grid-column: c-2 / c-3;
    }
    @include lista-rzeczy-grid-container();
    &--tytul {
      @include tytul-kazdy();
    }
    &--karta {
      @include karta-kazda();
    }
  }
  &__kontakt {
    @media (orientation: landscape) {
      grid-row: r-1 / r-2;
      grid-column: c-3 / c-4;
    }
    @include lista-rzeczy-grid-container();
    // grid-template-rows:
    //   [c-1] 1fr
    //   [c-2] 5fr
    //   [c-3];
    // grid-template-columns:
    //   [c-1] 1fr
    //   [c-2] 5fr
    //   [c-3];
    &--tytul {
      @include tytul-kazdy();
    }
    &--karta {
      @include karta-kazda();
      justify-items: center;
      // margin: auto;
      display: grid;
      grid-template-columns:
        [c-1] 1fr
        [c-2];
    }
    &--sociale {
      // @include lista-rzeczy-grid-container();
      @include karta-kazda();

      display: grid;

      grid-template-columns:
        [c-1] 1fr
        [c-2] 1fr
        [c-3] 1fr
        [c-4];

      justify-items: center;
      // margin: 2rem 0 0 0;
      // font-size: 4rem;
      & svg {
        font-size: 2.5rem;
      }
    }
  }
  &__copyright {
    @include karta-kazda();
    display: inline-block;
    // justify-items: center;
    // align-self: start;
    text-align: center;
    color: rgb(69, 69, 69);
    text-shadow: none;
    margin: 0 auto 2rem auto;
    // margin-bottom: 2rem;
    @media (orientation: landscape) {
      grid-row: r-2 / r-3;
      grid-column: c-1 / c-4;
    }
  }

  &__link-do-tworcow {
    @include karta-kazda();

    display: inline-block;
    // justify-items: center;
    // align-self: start;
    text-align: center;
    color: rgb(69, 69, 69);
    text-shadow: none;
    margin: 0 auto 2rem auto;

    @media (orientation: landscape) {
      grid-row: r-3/ r-4;
      grid-column: c-1 / c-4;
    }
  }
}
